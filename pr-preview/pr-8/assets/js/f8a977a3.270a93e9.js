"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||i;return n?r.createElement(d,o(o({ref:t},l),{},{components:n})):r.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={title:"Athena limits Hive table to 100 partitions",sidebar_label:"Athena limits Hive tables to 100 partitions",id:"too-many-open-partitions"},p=void 0,c={unversionedId:"faqs/Athena/too-many-open-partitions",id:"faqs/Athena/too-many-open-partitions",title:"Athena limits Hive table to 100 partitions",description:"In some cases, you might experience HIVETOOMANYOPENPARTITIONS: Exceeded limit of 100 open writers for partitions/buckets.. Athena supports writing to 100 unique partition and bucket combinations per query. For example, if no buckets are defined in the destination table, you can specify a maximum of 100 partitions. If you specify five buckets, 20 partitions (each with five buckets) are allowed. If you exceed this count, an error occurs.",source:"@site/docs/faqs/Athena/too-many-open-partitions.md",sourceDirName:"faqs/Athena",slug:"/faqs/Athena/too-many-open-partitions",permalink:"/pr-preview/pr-8/faqs/Athena/too-many-open-partitions",draft:!1,editUrl:"https://github.com/dbt-athena/dbt-athena.github.io/edit/main/docs/faqs/Athena/too-many-open-partitions.md",tags:[],version:"current",lastUpdatedAt:1683792614,formattedLastUpdatedAt:"May 11, 2023",frontMatter:{title:"Athena limits Hive table to 100 partitions",sidebar_label:"Athena limits Hive tables to 100 partitions",id:"too-many-open-partitions"},sidebar:"docs",previous:{title:"How many dbt threads should I configure",permalink:"/pr-preview/pr-8/faqs/Athena/dbt-threads"}},l={},u=[],m={toc:u},f="wrapper";function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)(f,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In some cases, you might experience ",(0,i.kt)("inlineCode",{parentName:"p"},"HIVE_TOO_MANY_OPEN_PARTITIONS: Exceeded limit of 100 open writers for partitions/buckets."),". Athena supports writing to 100 unique partition and bucket combinations per query. For example, if no buckets are defined in the destination table, you can specify a maximum of 100 partitions. If you specify five buckets, 20 partitions (each with five buckets) are allowed. If you exceed this count, an error occurs."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Iceberg tables are also affected by the same limitation. The ",(0,i.kt)("inlineCode",{parentName:"p"},"iceberg.max-partitions-per-writer")," setting in Trino is set by default to 100.")),(0,i.kt)("p",null,"AWS suggests a workaround in the documentation using ",(0,i.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/athena/latest/ug/ctas-insert-into.html"},"CTAs and INSERT INTO"),". We can automate this in dbt using a materialization. An example implementation \u2013 inspired by the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dbt-labs/dbt-labs-experimental-features/tree/main/insert_by_period"},"Redshift insert_by_period materialization")," \u2013 can be found ",(0,i.kt)("a",{parentName:"p",href:"https://gist.github.com/jessedobbelaere/6fdb593f9e2cc732e9f142c56c9bac87"},"here"),"."))}d.isMDXComponent=!0}}]);