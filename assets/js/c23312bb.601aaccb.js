"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[140],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),p=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},d=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},l="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),l=p(n),f=o,m=l["".concat(s,".").concat(f)]||l[f]||u[f]||a;return n?r.createElement(m,c(c({ref:e},d),{},{components:n})):r.createElement(m,c({ref:e},d))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,c=new Array(a);c[0]=f;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[l]="string"==typeof t?t:o,c[1]=i;for(var p=2;p<a;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3103:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],i={title:"Contract & Constraints",id:"contract-constraints"},s=void 0,p={unversionedId:"docs/configuration/contract-constraints",id:"docs/configuration/contract-constraints",title:"Contract & Constraints",description:"Contract",source:"@site/docs/docs/configuration/contract.md",sourceDirName:"docs/configuration",slug:"/docs/configuration/contract-constraints",permalink:"/docs/configuration/contract-constraints",draft:!1,editUrl:"https://github.com/dbt-athena/dbt-athena.github.io/edit/main/docs/docs/configuration/contract.md",tags:[],version:"current",lastUpdatedAt:1696509203,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"Contract & Constraints",id:"contract-constraints"},sidebar:"docs",previous:{title:"Snapshots",permalink:"/docs/configuration/snapshots"},next:{title:"Lakeformation",permalink:"/docs/configuration/lakeformation"}},d={},l=[{value:"Contract",id:"contract",level:2},{value:"Constraints",id:"constraints",level:2}],u={toc:l},f="wrapper";function m(t){var e=t.components,n=(0,o.Z)(t,c);return(0,a.kt)(f,(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"contract"},"Contract"),(0,a.kt)("p",null,"The adapter partly supports ",(0,a.kt)("a",{parentName:"p",href:"https://docs.getdbt.com/reference/resource-configs/contract"},"contract")," definition."),(0,a.kt)("p",null,"Concerning the ",(0,a.kt)("inlineCode",{parentName:"p"},"data_type"),", it is supported but needs to be adjusted for complex types. They must be specified\nentirely (for instance ",(0,a.kt)("inlineCode",{parentName:"p"},"array<int>"),") even though they won't be checked. Indeed, as dbt recommends, we only compare\nthe broader type (array, map, int, varchar). The complete definition is used in order to check that the data types\ndefined in athena are ok (pre-flight check)."),(0,a.kt)("h2",{id:"constraints"},"Constraints"),(0,a.kt)("p",null,"The adapter does not support ",(0,a.kt)("a",{parentName:"p",href:"https://docs.getdbt.com/reference/resource-properties/constraints"},"constraints")," since\nconstraints don't exist in Athena."))}m.isMDXComponent=!0}}]);